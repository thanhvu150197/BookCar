using BookCar.SharedComponent.Entities;
using BookCar.SharedComponent.Param;
using BookCarBLL;
using BookCarBLL.Admin;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace BookCar2.Admin.ServiceOrders
{
    public partial class ListBooking : System.Web.UI.Page
    {
        //Trang thai cho duyet
        protected string Status = "1";
        //
        protected int PageIndex = 0;
        CarParam _carParam = new CarParam();
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!Page.IsPostBack)
            {
                LoadDataGrid();
            }
        }

        protected void grvListRequire_PageIndexChanged(object source, DataGridPageChangedEventArgs e)
        {
            grvListRequire.CurrentPageIndex = e.NewPageIndex;
            ServiceOrder enServiceOrder = new ServiceOrder();
            _carParam.ServiceOrder = enServiceOrder;
            DisplayCurrentPage(grvListRequire.CurrentPageIndex, _carParam);
        }

        protected void grvListRequire_ItemCommand(object source, DataGridCommandEventArgs e)
        {
            int i = e.Item.ItemIndex;
            CarsBiz CarsBiz = new CarsBiz();
            CarParam carParam = new CarParam();
            int id = 0;


            switch (((LinkButton)e.CommandSource).CommandName)
            {

                case "ViewService":
                    id = Convert.ToInt32(grvListRequire.DataKeys[i].ToString());
                    Response.Redirect("DisplayBooking.aspx?v=" + id);
                    break;
                case "Confirm":
                    id = Convert.ToInt32(grvListRequire.DataKeys[i].ToString());
                    Response.Redirect("ConfirmOrders.aspx?v=" + id);
                    break;
                case "Cancle":
                    id = Convert.ToInt32(grvListRequire.DataKeys[i].ToString());
                    CancleOrder(id);
                    LoadDataGrid();
                    break;
                default:
                    // Do nothing.
                    break;

            }
        }
        protected void DisplayCurrentPage(int PageIndex, CarParam carParam)
        {
            ServiceOrderBiz ServiceBiz = new ServiceOrderBiz();
            List<ServiceOrder> ListService = new List<ServiceOrder>();
            carParam.Pagesize = 5;
            carParam.CurrentPageIndex = PageIndex;

            ServiceBiz.SearchService(carParam, Status);
            ListService = carParam.ListServiceOrder;

            grvListRequire.VirtualItemCount = carParam.TotalItem.Value;
            grvListRequire.DataSource = ListService;
            grvListRequire.DataBind();
        }
    
        protected void CancleOrder(int id)
        {
            ServiceOrderBiz serviceOrderBiz = new ServiceOrderBiz();
            ServiceOrder enServiceOrder = new ServiceOrder();
            enServiceOrder.OrderID = id;
            enServiceOrder.Status = 0;
            enServiceOrder.UpdatedDTG = DateTime.Now;
            serviceOrderBiz.UpdateService(enServiceOrder);
        }
        protected void SetPageIndex(int Index)
        {
            PageIndex = Index;
        }
        protected void LoadDataGrid()
        {
            ServiceOrder enServiceOrder = new ServiceOrder();
            _carParam.ServiceOrder = enServiceOrder;
            DisplayCurrentPage(PageIndex, _carParam);
        }
    }
}
